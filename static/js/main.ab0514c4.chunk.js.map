{"version":3,"sources":["context/MovieContext.js","context/MovieProvider.js","images/mainImage.png","images/jason.png","pages/MainPage.jsx","components/Card.jsx","services/MoviesAPI.js","services/SeriesAPI.js","components/Header.jsx","pages/Movies.jsx","pages/Series.jsx","images/avatar.png","components/ReviewCard.jsx","pages/Details.jsx","pages/DetailsTvShow.jsx","App.js","index.js"],"names":["MovieContext","createContext","MovieProvider","children","useState","searchMovie","setSearchMovie","searchValue","setSearchValue","detailsMovie","setDetailsMovie","detailsTvShow","store","setDetailsTvShow","Provider","value","MainPage","history","useHistory","className","src","image","alt","type","onClick","push","jason","Card","props","name","ranking","overview","release","id","genre","useContext","newObj","window","location","pathname","apiKey","baseUrl","url","fetchMovie","a","fetch","then","result","json","response","results","fetchSearchMovie","input","searchUrl","genreList","listUrl","genres","fetchMovieByGenre","fetchMovieReview","fetchMovieDetails","fetchMovieVideo","fetchSeries","fetchSearchSeries","fetchTvShowByGenre","fetchTvShowReview","genreTvShowList","fetchTvShowDetails","fetchTvVideo","Header","title","setInput","redirect","reload","onChange","target","Movies","popularMovies","setPopularMovies","setGenres","getMovies","length","getGenreList","filterByGenre","useEffect","console","log","slice","map","index","movie","vote_average","release_date","poster_path","Series","popularSeries","setPopularSeries","getSeries","serie","first_air_date","genre_ids","ReviewCard","content","setSrc","oi","substr","getAvatarImage","avatar","Details","review","setReview","details","setDetails","video","setVideo","getReview","match","params","youtube","trailer","filter","element","key","filterTrailerMovie","generos","allowFullScreen","author","author_details","avatar_path","DetailsTvShow","secondVideo","anotherVideo","filterTrailerTvShow","App","basename","process","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab0514c4.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst MovieContext = createContext();\n\nexport default MovieContext;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieContext from './MovieContext';\n\nexport default function MovieProvider({ children }) {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [detailsMovie, setDetailsMovie] = useState({});\n  const [detailsTvShow, setDetailsTvShow] = useState({});\n\n  const store = {\n    searchMovie,\n    setSearchMovie,\n    setSearchValue,\n    searchValue,\n    detailsMovie,\n    setDetailsMovie,\n    setDetailsTvShow,\n    detailsTvShow,\n  };\n\n  return (\n    <MovieContext.Provider value={ store }>\n      {children}\n    </MovieContext.Provider>\n  );\n}\n\nMovieProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/mainImage.e75f1312.png\";","export default __webpack_public_path__ + \"static/media/jason.cc2fcdf4.png\";","import React from 'react';\nimport '../css/MainPage.css';\nimport { useHistory } from 'react-router-dom';\nimport image from '../images/mainImage.png';\nimport jason from '../images/jason.png';\n\nexport default function MainPage() {\n  const history = useHistory();\n\n  return (\n    <div className=\"MainPage\">\n      <h1>Movies and TV Shows Database</h1>\n      <div className=\"first-container\">\n        <img className=\"image\" src={ image } alt=\"movies and tv shows logo\" />\n        <button type=\"button\" onClick={ () => history.push('/movies') }>\n          MOVIES\n        </button>\n      </div>\n      <hr />\n      <div className=\"second-container\">\n        <button type=\"button\" onClick={ () => history.push('/series') }>\n          SERIES\n        </button>\n        <img className=\"jason\" src={ jason } alt=\"movies and tv shows logo\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport MovieContext from '../context/MovieContext';\nimport '../css/Card.css';\n\nexport default function Card(props) {\n  const { image, name, ranking, overview, release, id, genre } = props;\n  const { setDetailsMovie, setDetailsTvShow } = useContext(MovieContext);\n  const history = useHistory();\n\n  const submitInfo = () => {\n    const newObj = {\n      name,\n      image,\n      ranking,\n      overview,\n      release,\n      id,\n      genre,\n    };\n\n    if (window.location.pathname === '/movies') {\n      setDetailsMovie(newObj);\n      history.push(`/movies/${id}`);\n    } else {\n      setDetailsTvShow(newObj);\n      history.push(`/series/${id}`);\n    }\n  };\n\n  return (\n    <button type=\"button\" className=\"Card\" onClick={ submitInfo }>\n      <img src={ `https://image.tmdb.org/t/p/w500${image}` } alt=\"oi\" />\n      <h3>{ name }</h3>\n      <span>{`${ranking} ★`}</span>\n    </button>\n  );\n}\n\nCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  ranking: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  release: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  genre: PropTypes.number.isRequired,\n};\n","const apiKey = 'api_key=11f7f74a9c3f21eccd198b02d389c5e6';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst url = `${baseUrl}/discover/movie?sort_by=popularity.desc&${apiKey}`;\n// eslint-disable-next-line max-len\n\nexport const fetchMovie = async () => {\n  const response = await fetch(url).then((result) => result.json());\n  return response.results;\n};\n\nexport const fetchSearchMovie = async (input) => {\n  const searchUrl = `${baseUrl}/search/movie?${apiKey}&query=${input}`;\n  const response = await fetch(searchUrl).then((result) => result.json());\n  return response.results;\n};\n\nexport const genreList = async () => {\n  const listUrl = `${baseUrl}/genre/movie/list?${apiKey}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response.genres;\n};\n\nexport const fetchMovieByGenre = async (id) => {\n  const listUrl = `${url}&with_genres=${id}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response.results;\n};\n\nexport const fetchMovieReview = async (id) => {\n  const listUrl = `${baseUrl}/movie/${id}/reviews?${apiKey}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response.results;\n};\n\nexport const fetchMovieDetails = async (id) => {\n  const listUrl = `${baseUrl}/movie/${id}?${apiKey}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response;\n};\n\nexport const fetchMovieVideo = async (id) => {\n  const listUrl = `${baseUrl}/movie/${id}/videos?${apiKey}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response.results;\n};\n","const apiKey = 'api_key=11f7f74a9c3f21eccd198b02d389c5e6';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst url = `${baseUrl}/discover/tv?sort_by=popularity.desc&${apiKey}`;\n// eslint-disable-next-line max-len\n\nexport const fetchSeries = async () => {\n  const response = await fetch(url).then((result) => result.json());\n  return response.results;\n};\n\nexport const fetchSearchSeries = async (input) => {\n  const searchUrl = `${baseUrl}/search/tv?${apiKey}&query=${input}`;\n  const response = await fetch(searchUrl).then((result) => result.json());\n  return response.results;\n};\n\nexport const fetchTvShowByGenre = async (id) => {\n  const listUrl = `${url}&with_genres=${id}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response.results;\n};\n\nexport const fetchTvShowReview = async (id) => {\n  const listUrl = `${baseUrl}/tv/${id}/reviews?${apiKey}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response.results;\n};\n\nexport const genreTvShowList = async () => {\n  const listUrl = `${baseUrl}/genre/tv/list?${apiKey}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response.genres;\n};\n\nexport const fetchTvShowDetails = async (id) => {\n  const listUrl = `${baseUrl}/tv/${id}?${apiKey}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response;\n};\n\nexport const fetchTvVideo = async (id) => {\n  const listUrl = `${baseUrl}/tv/${id}/videos?${apiKey}`;\n  const response = await fetch(listUrl).then((result) => result.json());\n  return response.results;\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Header.css';\nimport { useState } from 'react/cjs/react.development';\nimport { useHistory } from 'react-router-dom';\nimport { fetchSearchMovie } from '../services/MoviesAPI';\nimport MovieContext from '../context/MovieContext';\nimport { fetchSearchSeries } from '../services/SeriesAPI';\n\nexport default function Header(props) {\n  const { title } = props;\n  const [input, setInput] = useState('');\n  const { setSearchMovie, setSearchValue } = useContext(MovieContext);\n  const history = useHistory();\n\n  const searchMovie = async () => {\n    if (window.location.pathname === '/series') {\n      setSearchMovie(await fetchSearchSeries(input));\n      setSearchValue(input);\n      setInput('');\n    } else {\n      setSearchMovie(await fetchSearchMovie(input));\n      setSearchValue(input);\n      setInput('');\n    }\n  };\n\n  const reload = () => {\n    window.location.reload();\n  };\n\n  const redirect = () => {\n    if (window.location.pathname === '/movies') {\n      setSearchMovie([]);\n      history.push('/series');\n    } else {\n      setSearchMovie([]);\n      history.push('/movies');\n    }\n  };\n\n  return (\n    <div className=\"Header\">\n      <button onClick={ reload } type=\"button\" className=\"title-button\">\n        {title}\n      </button>\n      {\n        window.location.pathname === '/series' ? (\n          <button\n            onClick={ redirect }\n            type=\"button\"\n            className=\"title-button\"\n          >\n            Movies\n          </button>\n        ) : (\n          <button\n            onClick={ redirect }\n            type=\"button\"\n            className=\"title-button\"\n          >\n            Series\n          </button>\n        )\n      }\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          value={ input }\n          name=\"input\"\n          onChange={ ({ target: { value } }) => setInput(value) }\n        />\n        <button type=\"button\" onClick={ searchMovie }>\n          SEARCH\n        </button>\n      </div>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Header from '../components/Header';\nimport MovieContext from '../context/MovieContext';\nimport '../css/Movies.css';\nimport { fetchMovie, fetchMovieByGenre, genreList } from '../services/MoviesAPI';\n\nexport default function Movies() {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const maxMovies = 15;\n  const { searchMovie, searchValue } = useContext(MovieContext);\n  const magicNumber = 18;\n\n  const getMovies = async () => {\n    if (searchMovie.length > 0) {\n      setPopularMovies(searchMovie);\n    } else {\n      setPopularMovies(await fetchMovie());\n    }\n  };\n\n  const getGenreList = async () => {\n    setGenres(await genreList());\n  };\n\n  const filterByGenre = async (id) => {\n    setPopularMovies(await fetchMovieByGenre(id));\n  };\n\n  useEffect(() => {\n    getMovies();\n    getGenreList();\n  }, [searchMovie]);\n\n  console.log(popularMovies);\n  console.log(genres);\n\n  return (\n    <div className=\"Movies\">\n      <Header title=\"Movies\" />\n      <h1>Categories</h1>\n      <div className=\"genre-container\">\n        {\n          genres.slice(0, magicNumber).map((genre, index) => (\n            <button\n              className=\"category-buttons\"\n              key={ index }\n              type=\"button\"\n              onClick={ () => filterByGenre(genre.id) }\n            >\n              {genre.name}\n            </button>\n          ))\n        }\n      </div>\n      {\n        searchMovie.length > 0 ? (\n          <h1>{`Explore titles related to: \"${searchValue}\"`}</h1>\n        ) : (\n          <h1>Popular Movies</h1>\n        )\n      }\n      <div className=\"movie-container\">\n        {\n          popularMovies.slice(0, maxMovies).map((movie) => (\n            <Card\n              key={ movie.id }\n              name={ movie.title }\n              ranking={ movie.vote_average }\n              release={ movie.release_date }\n              image={ movie.poster_path }\n              id={ movie.id }\n              overview={ movie.overview }\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Header from '../components/Header';\nimport MovieContext from '../context/MovieContext';\nimport '../css/Movies.css';\nimport { fetchSeries, fetchTvShowByGenre, genreTvShowList } from '../services/SeriesAPI';\n\nexport default function Series() {\n  const [popularSeries, setPopularSeries] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const maxSeries = 15;\n  const magicNumber = 12;\n  const { searchMovie, searchValue } = useContext(MovieContext);\n\n  const getSeries = async () => {\n    if (searchMovie.length > 0) {\n      setPopularSeries(searchMovie);\n    } else {\n      setPopularSeries(await fetchSeries());\n    }\n  };\n\n  const getGenreList = async () => {\n    setGenres(await genreTvShowList());\n  };\n\n  const filterByGenre = async (id) => {\n    setPopularSeries(await fetchTvShowByGenre(id));\n  };\n\n  useEffect(() => {\n    getSeries();\n    getGenreList();\n  }, [searchMovie]);\n\n  console.log(popularSeries);\n\n  return (\n    <div className=\"Movies\">\n      <Header title=\"Series\" />\n      <h1>Categories</h1>\n      <div className=\"genre-container\">\n        {\n          genres.slice(0, magicNumber).map((genre, index) => (\n            <button\n              className=\"category-buttons\"\n              key={ index }\n              type=\"button\"\n              onClick={ () => filterByGenre(genre.id) }\n            >\n              {genre.name}\n            </button>\n          ))\n        }\n      </div>\n      {\n        searchMovie.length > 0 ? (\n          <h1>{`Explore titles related to: \"${searchValue}\"`}</h1>\n        ) : (\n          <h1>Popular Series</h1>\n        )\n      }\n      <div className=\"movie-container\">\n        {\n          popularSeries.slice(0, maxSeries).map((serie) => (\n            <Card\n              key={ serie.id }\n              name={ serie.name }\n              ranking={ serie.vote_average }\n              release={ serie.first_air_date }\n              image={ serie.poster_path }\n              id={ serie.id }\n              overview={ serie.overview }\n              genre={ serie.genre_ids }\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/avatar.947dab13.png\";","import React, { useEffect } from 'react';\nimport { useState } from 'react/cjs/react.development';\nimport PropTypes from 'prop-types';\nimport avatar from '../images/avatar.png';\nimport '../css/ReviewCard.css';\n\nexport default function ReviewCard(props) {\n  const { name, content, image } = props;\n  const [src, setSrc] = useState('');\n  const magicNumber = 60;\n\n  const getAvatarImage = () => {\n    if (image === null) {\n      setSrc('');\n    } else if (image.length > magicNumber) {\n      const oi = image.substr(1);\n      setSrc(oi);\n    } else {\n      setSrc(`https://image.tmdb.org/t/p/w500${image}`);\n    }\n  };\n\n  useEffect(() => {\n    getAvatarImage();\n  }, []);\n\n  return (\n    <div className=\"ReviewCard\">\n      <div className=\"author\">\n        {\n          src === '' ? (\n            <img src={ avatar } alt=\"logo\" />\n          ) : (\n            <img src={ src } alt=\"logo\" />\n          )\n        }\n        <h1>{name}</h1>\n      </div>\n      <div className=\"content\">\n        <p>{ content }</p>\n      </div>\n    </div>\n  );\n}\n\nReviewCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react/cjs/react.development';\nimport { useHistory } from 'react-router-dom';\nimport MovieContext from '../context/MovieContext';\nimport '../css/Details.css';\nimport { fetchMovieDetails,\n  fetchMovieReview,\n  fetchMovieVideo,\n} from '../services/MoviesAPI';\nimport ReviewCard from '../components/ReviewCard';\n\nexport default function Details(props) {\n  const { detailsMovie } = useContext(MovieContext);\n  const [review, setReview] = useState([]);\n  const [details, setDetails] = useState({});\n  const [video, setVideo] = useState([]);\n  const history = useHistory();\n\n  const getReview = async () => {\n    const { match } = props;\n    const { id } = match.params;\n    setReview(await fetchMovieReview(id));\n    setDetails(await fetchMovieDetails(id));\n    setVideo(await fetchMovieVideo(id));\n  };\n\n  const filterTrailerMovie = () => {\n    const result = video.filter((element) => element.type === 'Trailer')\n      .map((element) => element.key);\n    const trailer = result[0];\n    if (!trailer) {\n      return null;\n    }\n    const youtube = `https://www.youtube.com/embed/${trailer}`;\n    return youtube;\n  };\n\n  const youtube = filterTrailerMovie();\n  console.log(youtube);\n\n  useEffect(() => {\n    getReview();\n  }, []);\n\n  // const trailer = filterTrailerMovie();\n  // // const youtube = `https://www.youtube.com/embed/${trailer.keys}`;\n  // setYoutube(trailer.key);\n\n  const generos = details.genres;\n  // console.log(video);\n\n  return (\n    <div className=\"Details\">\n      <div className=\"info\">\n        <div className=\"info-movie\">\n          <h1>{ detailsMovie.name }</h1>\n          <h3>{`Release Date: ${detailsMovie.release}`}</h3>\n        </div>\n        <button\n          className=\"back\"\n          type=\"button\"\n          onClick={ () => history.push('/movies') }\n        >\n          Movies\n        </button>\n        <span>{`IMDB Rating: ${detailsMovie.ranking} ★`}</span>\n      </div>\n      <div className=\"overview\">\n        <img src={ `https://image.tmdb.org/t/p/w500${detailsMovie.image}` } alt=\"oi\" />\n        <div className=\"overview-container\">\n          <div className=\"genres-container\">\n            {\n              generos && (\n                generos.map((element, index) => (\n                  <span className=\"genre\" key={ index }>{element.name}</span>\n                ))\n              )\n            }\n          </div>\n          <div className=\"paragraph-overview\">\n            <h1>Overview:</h1>\n            <p>\n              {detailsMovie.overview}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"trailer-container\">\n        {\n          youtube && (\n            <iframe\n              src={ youtube }\n              allowFullScreen\n              title=\"video\"\n              className=\"video\"\n            />\n          )\n        }\n      </div>\n      <div>\n        {\n          review.length > 0 ? (\n            <h1 className=\"review\">Reviews</h1>\n          ) : (\n            <h1 className=\"review\">Movie without review</h1>\n          )\n        }\n        {\n          review.map((element, index) => (\n            <ReviewCard\n              key={ index }\n              name={ element.author }\n              content={ element.content }\n              image={ element.author_details.avatar_path }\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.objectOf(PropTypes.string),\n  }).isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react/cjs/react.development';\nimport { useHistory } from 'react-router-dom';\nimport MovieContext from '../context/MovieContext';\nimport '../css/Details.css';\nimport { fetchTvShowDetails,\n  fetchTvShowReview,\n  fetchTvVideo,\n} from '../services/SeriesAPI';\nimport ReviewCard from '../components/ReviewCard';\n\nexport default function DetailsTvShow(props) {\n  const { detailsTvShow } = useContext(MovieContext);\n  const [review, setReview] = useState([]);\n  const [details, setDetails] = useState({});\n  const [video, setVideo] = useState([]);\n  const history = useHistory();\n\n  const getReview = async () => {\n    const { match } = props;\n    const { id } = match.params;\n    setReview(await fetchTvShowReview(id));\n    setDetails(await fetchTvShowDetails(id));\n    setVideo(await fetchTvVideo(id));\n  };\n\n  const filterTrailerTvShow = () => {\n    const result = video.filter((element) => element.type === 'Trailer')\n      .map((element) => element.key);\n    const trailer = result[0];\n    if (!trailer) {\n      return null;\n    }\n    const youtube = `https://www.youtube.com/embed/${trailer}`;\n    return youtube;\n  };\n\n  const anotherVideo = () => {\n    if (video.length > 1) {\n      const result = video.map((element) => element.key);\n      const trailer = result[0];\n      const youtube = `https://www.youtube.com/embed/${trailer}`;\n      return youtube;\n    }\n\n    const result = video.map((element) => element.key);\n    const youtube = `https://www.youtube.com/embed/${result}`;\n    return youtube;\n  };\n\n  const secondVideo = anotherVideo();\n\n  const youtube = filterTrailerTvShow();\n\n  useEffect(() => {\n    getReview();\n  }, []);\n\n  const generos = details.genres;\n\n  console.log(generos);\n\n  return (\n    <div className=\"Details\">\n      <div className=\"info\">\n        <div className=\"info-movie\">\n          <h1>{ detailsTvShow.name }</h1>\n          <h3>{`Release Date: ${detailsTvShow.release}`}</h3>\n        </div>\n        <button\n          className=\"back\"\n          type=\"button\"\n          onClick={ () => history.push('/series') }\n        >\n          Series\n        </button>\n        <span>{`IMDB Rating: ${detailsTvShow.ranking} ★`}</span>\n      </div>\n      <div className=\"overview\">\n        <img src={ `https://image.tmdb.org/t/p/w500${detailsTvShow.image}` } alt=\"oi\" />\n        <div className=\"overview-container\">\n          <div className=\"genres-container\">\n            {\n              generos && (\n                generos.map((element, index) => (\n                  <span className=\"genre\" key={ index }>{element.name}</span>\n                ))\n              )\n            }\n          </div>\n          <div className=\"paragraph-overview\">\n            <h1>Overview:</h1>\n            <p>\n              {detailsTvShow.overview}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"trailer-container\">\n        {\n          youtube ? (\n            <iframe\n              src={ youtube }\n              allowFullScreen\n              title=\"video\"\n              className=\"video\"\n            />\n          ) : (\n            <iframe\n              src={ secondVideo }\n              allowFullScreen\n              title=\"video\"\n              className=\"video\"\n            />\n          )\n        }\n      </div>\n      <div>\n        {\n          review.length > 0 ? (\n            <h1 className=\"review\">Reviews</h1>\n          ) : (\n            <h1 className=\"review\">Without review</h1>\n          )\n        }\n        {\n          review.map((element, index) => (\n            <ReviewCard\n              key={ index }\n              name={ element.author }\n              content={ element.content }\n              image={ element.author_details.avatar_path }\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nDetailsTvShow.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.objectOf(PropTypes.string),\n  }).isRequired,\n};\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport MovieProvider from './context/MovieProvider';\nimport MainPage from './pages/MainPage';\nimport Movies from './pages/Movies';\nimport Series from './pages/Series';\nimport Details from './pages/Details';\nimport DetailsTvShow from './pages/DetailsTvShow';\n\nexport default function App() {\n  return (\n    <MovieProvider>\n      <BrowserRouter basename={ process.env.PUBLIC_URL }>\n        <Switch>\n          <Route path=\"/\" exact component={ MainPage } />\n          <Route path=\"/movies\" exact component={ Movies } />\n          <Route path=\"/series\" exact component={ Series } />\n          <Route path=\"/movies/:id\" exact component={ Details } />\n          <Route path=\"/series/:id\" exact component={ DetailsTvShow } />\n        </Switch>\n      </BrowserRouter>\n    </MovieProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}